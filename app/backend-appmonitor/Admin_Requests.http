@url = http://localhost:8080/appmonitor/api
@username = Admin

### LOGIN (ALL USERS - MANAGER, MANAGER, CUSTOMER, ADMIN)
POST {{url}}/auth/login
Content-Type: application/json
Accept: application/json

{
  "username": "Admin",
  "password": "123"
}

> {% client.global.set('jwt-token', response.body) %}

### SEND EMAIL TO A USER (FOR TESTING PURPOSES)
POST {{url}}/emails/Jose
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "subject": "Test Email",
  "body": "This is a test email sent via the API."
}

### GET ROLES FOR USER (ONLY ADMIN)
GET {{url}}/users/roles
Accept: application/json
Authorization: Bearer {{jwt-token}}

### GET AUTHENTICATED USER (FOR ALL USERS - MANAGER, EMPLOYEE, CUSTOMER, ADMIN)
GET {{url}}/auth/user
Accept: application/json
Authorization: Bearer {{jwt-token}}

### CHANGE PASSWORD (FOR ALL USERS - MANAGER, EMPLOYEE, CUSTOMER, ADMIN)
PATCH {{url}}/auth/{{username}}/change-password
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "currentPassword": "123",
  "newPassword": "1234",
  "newPasswordConfirmation": "1234"
}

### GET A SINGLE ADMIN (ONLY FOR ADMINS)
GET {{url}}/admins/Admin
Accept: application/json
Authorization: Bearer {{jwt-token}}

### CREATE A NEW ADMIN (ONLY FOR ADMINS)
POST {{url}}/admins/
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "username": "NewAdmin",
  "password": "SecurePass123",
  "name": "John Doe",
  "email": "john.doe@example.com"
}

### CREATE A NEW CUSTOMER (ONLY FOR ADMINS)
POST {{url}}/customers/
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "username": "newCustomer",
  "password": "CustomerPass123",
  "name": "Jane Doe",
  "email": "jane.doe@example.com"
}

### Create Employee (ADMIN ONLY)
POST {{url}}/employees/
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "username": "new_employee",
  "password": "securepassword",
  "name": "New Employee",
  "email": "new.employee@example.com",
  "warehouse": "Main Warehouse"
}

### Create Manager (ONLY ADMIN)
POST {{url}}/managers/
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "username": "new_manager",
  "password": "securepassword",
  "name": "New Manager",
  "email": "new.manager@example.com",
  "office": "Main Office"
}







### SEND EMAIL TO A USER (FOR TESTING PURPOSES)
POST {{url}}/emails/Jose
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "subject": "Test Email",
  "body": "This is a test email sent via the API."
}

### UPDATE ADMIN DETAILS (ONLY FOR ADMINS)
PUT {{url}}/admins/Admin
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "name": "John Updated"
}




### GET ALL ADMINS (ONLY FOR ADMINS)
GET {{url}}/admins/
Accept: application/json
Authorization: Bearer {{jwt-token}}







########## CUSTOMER SERVICE

### GET A SINGLE CUSTOMER (CUSTOMER AND ADMIN)
GET {{url}}/customers/Joel
Accept: application/json
Authorization: Bearer {{jwt-token}}

### GET ALL CUSTOMERS (EMPLOYEE AND ADMIN)
GET {{url}}/customers/
Accept: application/json
Authorization: Bearer {{jwt-token}}



### UPDATE AN EXISTING CUSTOMER (ADMIN AND CUSTOMER)
PUT {{url}}/customers/newCUSTOMER
Content-Type: application/json
Accept: application/json
Authorization: Bearer {{jwt-token}}

{
  "name": "Jane Doe Updated",
  "email": "jane.doe.updated@example.com"
}

### GET CUSTOMER'S ORDERS (MANAGER AND ADMIN)
GET {{url}}/customers/Joel/orders
Accept: application/json
Authorization: Bearer {{jwt-token}}


########## EMPLOYEE SERVICE

### Get Employee by Username (ADMIN AND EMPLOYEE)
GET {{url}}/employees/Jose
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### Get All Employees (ONLY FOR ADMINS)
GET {{url}}/employees/
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### Update Employee (ADMIN AND EMPLOYEE)
PUT {{url}}/employees/Jose
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "name": "Updated Employee Name",
  "email": "updated.email@example.com",
  "warehouse": "Updated Warehouse Location"
}

### Create Employee (ONLY FOR ADMINS)
POST {{url}}/employees/
Authorization: Bearer {{jwt-token}}
Content-Type: application/json


########## MANAGER SERVICE



### Get All Managers (ONLY ADMIN)
GET {{url}}/managers/
Authorization: Bearer {{jwt-token}}

### Get Manager by Username (ADMIN AND MANAGER)
GET {{url}}/managers/Ana
Authorization: Bearer {{jwt-token}}

### Update Manager (ADMIN AND MANAGER)
PUT {{url}}/managers/Ana
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "name": "Updated Manager Name",
  "email": "updated.manager@example.com",
  "office": "Updated Office"
}

########## ORDER SERVICE

### GET ALL ORDERS (CUSTOMER, MANAGER AND ADMIN)
GET {{url}}/orders
Authorization: Bearer {{jwt-token}}

### GET ORDER BY ID (CUSTOMER, MANAGER AND ADMIN)
GET {{url}}/orders/28
Authorization: Bearer {{jwt-token}}

### GET VOLUMES FOR ORDER (CUSTOMER, MANAGER AND ADMIN)
GET {{url}}/orders/28/volumes
Authorization: Bearer {{jwt-token}}

### GET AVAILABLE ORDERS (EMPLOYEE AND ADMIN)
GET {{url}}/orders/available
Authorization: Bearer {{jwt-token}}

### CREATE ORDER (ADMIN AND EMPLOYEE)
POST {{url}}/orders
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "id": 30,
  "customerUsername": "Tiago",
  "createdDate": "2024-11-20 21:00:00",
  "volume": {
    "id": 121,
    "sentDate": "2024-11-21 21:00:00",
    "packageTypeId": 2,
    "products": [
      {
        "productId": 2,
        "quantity": 1
      },
      {
        "productId": 1,
        "quantity": 1
      }
    ],
    "sensors": [
      {
        "id": 21,
        "sensorTypeId": 1
      },
      {
        "id": 20,
        "sensorTypeId": 2
      }
    ]
  }
}

### DELIVER ORDER (ADMIN AND EMPLOYEE)
PATCH {{url}}/orders/30/deliver
Authorization: Bearer {{jwt-token}}

############# PACKAGE-TYPE SERVICE

### GET ALL PACKAGE TYPES (ADMIN AND EMPLOYEE)
GET {{url}}/package-types/
Authorization: Bearer {{jwt-token}}

### GET PACKAGE TYPE BY ID (ONLY FOR ADMINS)
GET {{url}}/package-types/1
Authorization: Bearer {{jwt-token}}

### GET MANDATORY SENSORS FOR PACKAGE TYPE (ADMIN AND EMPLOYEE)
GET {{url}}/package-types/1/mandatory-sensors
Authorization: Bearer {{jwt-token}}

### CREATE PACKAGE TYPE (ONLY FOR ADMINS)
POST {{url}}/package-types
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "id": 10,
  "name": "Standard Package"
}

### UPDATE PACKAGE TYPE (ONLY FOR ADMINS)
PUT {{url}}/package-types/9
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "name": "Updated Package Type"
}

### ADD MANDATORY SENSOR TO PACKAGE TYPE (ONLY FOR ADMINS)
POST {{url}}/package-types/9/add-mandatory-sensor/1
Authorization: Bearer {{jwt-token}}

########### PRODUCT-TYPE SERVICE

### GET ALL PRODUCT TYPES (ADMIN AND EMPLOYEE)
GET {{url}}/product-types/
Authorization: Bearer {{jwt-token}}

### GET PRODUCT TYPE BY ID (ONLY FOR ADMINS)
GET {{url}}/product-types/1
Authorization: Bearer {{jwt-token}}

### GET MANDATORY SENSORS FOR PRODUCT TYPE (ADMIN AND EMPLOYEE)
GET {{url}}/product-types/1/mandatory-sensors
Authorization: Bearer {{jwt-token}}

### CREATE PRODUCT TYPE (ONLY FOR ADMINS)
POST {{url}}/product-types
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "id": 13,
  "name": "Product Type1",
  "mandatoryPackage": false
}

### UPDATE PRODUCT TYPE (ONLY FOR ADMINS)
PUT {{url}}/product-types/1
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "name": "Updated Product Type2"
}

### ADD MANDATORY SENSOR TO PRODUCT TYPE (ONLY FOR ADMINS)
POST {{url}}/product-types/1/add-mandatory-sensor/2
Authorization: Bearer {{jwt-token}}

########## SENSOR SERVICE

### GET All Sensors (ONLY FOR ADMINS)
GET {{url}}/sensors
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### GET Sensor by Id (MANAGER, CUSTOMER AND ADMIN)
GET {{url}}/sensors/3
Authorization: Bearer {{jwt-token}}

### Add Value to Sensor (ONLY FOR ADMINS)
POST {{url}}/sensors/3/add-value
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "value": 25.5
}

#### Update Sensor (ONLY FOR ADMINS)
#PUT {{url}}/sensors/3
#Authorization: Bearer {{jwt-token}}
#Content-Type: application/json
#
#{
#  "sensorTypeId": 2,
#  "volumeId": 28
#}

########## SENSOR-TYPE SERVICE

### GET Sensor Type by ID (ONLY FOR ADMINS)
GET {{url}}/sensor-types/1
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### GET All Sensor Types (EMPLOYEE AND ADMIN)
GET {{url}}/sensor-types
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### Create Sensor Type (ONLY FOR ADMINS)
POST {{url}}/sensor-types
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "id": 10,
  "name": "Movement",
  "unit": "m/s",
  "ceiling": 50,
  "floor": -10
}

### Update Sensor Type (ONLY FOR ADMINS)
PUT {{url}}/sensor-types/10
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "name": "Movement Updated",
  "unit": "m/s",
  "ceiling": 60,
  "floor": -20
}

############## USER SERVICE

### GET ALL USERS (ADMIN, CUSTOMER, EMPLOYEE, MANAGER)
GET {{url}}/users
Authorization: Bearer {{jwt-token}}

### GET USER BY USERNAME (ADMIN, CUSTOMER, EMPLOYEE, MANAGER)
GET {{url}}/users/Ana
Authorization: Bearer {{jwt-token}}


########## VOLUME SERVICE

### GET All Volumes (CUSTOMER AND MANAGER AND ADMIN)
GET {{url}}/volumes
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### GET Volume by ID (CUSTOMER AND MANAGER AND ADMIN)
GET {{url}}/volumes/103
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### GET Sensors of Volume (CUSTOMER AND MANAGER AND ADMIN)
GET {{url}}/volumes/103/sensors
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### GET Products of Volume (CUSTOMER AND MANAGER AND ADMIN)
GET {{url}}/volumes/103/products
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### PATCH Set Volume Delivered (EMPLOYEE AND ADMIN)
PATCH {{url}}/volumes/103/deliver
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

### POST Add New Volume (EMPLOYEE AND ADMIN)
POST {{url}}/volumes
Authorization: Bearer {{jwt-token}}
Content-Type: application/json

{
  "id": 108,
  "sentDate": "2021-06-01 00:00:00",
  "orderId": 28,
  "packageTypeId": 2,
  "products": [
    {
      "productId": 1,
      "quantity": 1
    },
    {
      "productId": 2,
      "quantity": 1
    }
  ],
  "sensors": [
    {
      "id": 11,
      "sensorTypeId": 1
    },
    {
      "id": 12,
      "sensorTypeId": 2
    }
  ]
}



